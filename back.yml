name: bamon
help: Bash Daemon Monitor - A tool for monitoring and executing bash scripts
version: 0.1.0

# Include library files
custom_includes:
  - src/lib/config.sh
  - src/lib/logging.sh
  - src/lib/performance.sh
  - src/lib/sandbox.sh
  - src/lib/execution.sh

commands:
  - name: add
    help: Add a new script to monitor
    args:
      - name: name
        required: true
        help: Script name/ID
    flags:
      - long: --command
        short: -c
        arg: command
        required: true
        help: Bash command/code to execute
      - long: --interval
        short: -i
        arg: seconds
        help: Execution interval in seconds - default 60
      - long: --description
        short: -d
        arg: text
        help: Description of what the script does
      - long: --enabled
        help: Set script as enabled - default
      - long: --disabled
        help: Set script as disabled
    examples:
      - "bamon add health_check --command 'curl -s -o /dev/null -w %{http_code} https://google.com' --interval 30"
      - "bamon add disk_check --command 'df -h / | awk NR==2' --description 'Check disk usage'"

  - name: remove
    help: Remove a script from monitoring
    args:
      - name: name
        required: true
        help: Script name/ID to remove
    flags:
      - long: --force
        short: -f
        help: Remove without confirmation
    examples:
      - "bamon remove health_check"
      - "bamon remove old_script --force"

  - name: now
    help: Execute all enabled scripts immediately
    flags:
      - long: --name
        short: -n
        arg: script_name
        help: Execute only specific script by name
      - long: --async
        short: -a
        help: Execute scripts asynchronously - default sequential
    examples:
      - "bamon now"
      - "bamon now --name health_check"
      - "bamon now --async"

  - name: start
    help: Start the daemon process
    flags:
      - long: --daemon
        short: -d
        help: Run in background (daemon mode)
      - long: --config
        short: -c
        arg: config_file
        help: Specify custom config file path
    examples:
      - "bamon start"
      - "bamon start --daemon"
      - "bamon start --config /etc/bamon/config.yml"

  - name: stop
    help: Stop the daemon process
    flags:
      - long: --force
        short: -f
        help: Force kill the daemon
    examples:
      - "bamon stop"
      - "bamon stop --force"

  - name: restart
    help: Restart the daemon process
    flags:
      - long: --daemon
        short: -d
        help: Run in background (daemon mode)
      - long: --config
        short: -c
        arg: config_file
        help: Specify custom config file path
    examples:
      - "bamon restart"
      - "bamon restart --daemon"

  - name: list
    help: List all configured scripts
    flags:
      - long: --enabled-only
        short: -e
        help: Show only enabled scripts
      - long: --disabled-only
        short: -d
        help: Show only disabled scripts
    examples:
      - "bamon list"
      - "bamon list --enabled-only"
      - "bamon list --disabled-only"

  - name: performance
    help: Display system performance metrics and optimization status
    flags:
      - long: --verbose
        short: -v
        help: Show detailed performance information
      - long: --format
        short: -f
        arg: format
        help: "Output format: table, json (default: table)"
      - long: --json
        short: -j
        help: Output in JSON format
    examples:
      - "bamon performance"
      - "bamon performance --verbose"
      - "bamon performance --json"

  - name: status
    help: Display current status of all configured scripts
    flags:
      - long: --verbose
        short: -v
        help: Show detailed information including full output
      - long: --failed-only
        short: -f
        help: Show only failed scripts
      - long: --json
        short: -j
        help: Output in JSON format
      - long: --name
        short: -n
        arg: script_name
        help: Check status of a specific script
    examples:
      - "bamon status"
      - "bamon status --verbose"
      - "bamon status --failed-only"
      - "bamon status --json"
      - "bamon status --name health_check"

flags:
  - long: --version
    short: -V
    help: Show version information
  - long: --help
    short: -h
    help: Show help information
