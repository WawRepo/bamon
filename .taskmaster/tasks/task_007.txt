# Task ID: 7
# Title: Implement Remove Command
# Status: done
# Dependencies: 2
# Priority: medium
# Description: Create the remove command to delete scripts from monitoring with confirmation and force options.
# Details:
1. Implement the remove command in `src/remove_command.sh`:
```bash
#!/usr/bin/env bash

source "${BASH_SOURCE%/*}/lib/config.sh"
source "${BASH_SOURCE%/*}/lib/logger.sh"

function remove_command() {
  local name=${args[--name]}
  local force=${args[--force]}
  
  # Load config
  load_config
  
  # Check if script exists
  if ! script_exists "$name"; then
    echo "Error: Script '$name' does not exist"
    return 1
  fi
  
  # Confirm removal if not forced
  if [[ "$force" != "true" ]]; then
    read -p "Are you sure you want to remove script '$name'? [y/N] " confirm
    if [[ ! $confirm =~ ^[Yy]$ ]]; then
      echo "Removal cancelled"
      return 0
    fi
  fi
  
  # Remove script from config
  remove_script_from_config "$name"
  
  echo "Script '$name' removed successfully"
  
  # Log the removal
  log_info "Removed script: $name"
  
  return 0
}
```
2. Implement validation to check if script exists
3. Add confirmation prompt with option to bypass with --force
4. Create function to remove script from configuration file
5. Provide feedback on successful removal

# Test Strategy:
1. Test removing an existing script with confirmation
2. Test removing an existing script with --force option
3. Verify error handling when script doesn't exist
4. Test cancellation of removal when user doesn't confirm
5. Verify script is correctly removed from configuration file
